definitions:
  models.Article:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
    type: object
  models.CreateArticleForm:
    properties:
      content:
        maxLength: 1000
        minLength: 3
        type: string
      title:
        maxLength: 100
        minLength: 3
        type: string
    required:
    - content
    - title
    type: object
  models.CreateProductForm:
    properties:
      content:
        maxLength: 1000
        minLength: 3
        type: string
      price:
        type: integer
      title:
        maxLength: 100
        minLength: 3
        type: string
    required:
    - content
    - price
    - title
    type: object
  models.CreateUserForm:
    properties:
      Email:
        type: string
      FirstName:
        type: string
      LastName:
        type: string
      Username:
        type: string
    required:
    - Email
    - FirstName
    - LastName
    - Username
    type: object
  models.Product:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      price:
        type: integer
      title:
        type: string
      updated_at:
        type: string
    type: object
  models.User:
    properties:
      createdAt:
        type: string
      email:
        type: string
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /articles:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Article'
      summary: Get All Articles
      tags:
      - articles
    post:
      description: Create An Article.
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreateArticleForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Article'
      summary: Create An Article
      tags:
      - articles
  /articles/{id}:
    delete:
      description: Delete An Article.
      parameters:
      - description: id
        format: id
        in: path
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Article'
      summary: Delete An Article
      tags:
      - articles
    get:
      description: Returns the the article with ID.
      parameters:
      - description: id
        format: id
        in: path
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Article'
      summary: Find a article
      tags:
      - articles
    put:
      description: Update An Article.
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreateArticleForm'
      - description: id
        format: id
        in: path
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Article'
      summary: Update An Article
      tags:
      - articles
  /healthcheck:
    get:
      consumes:
      - application/json
      description: do health check
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: health check
      tags:
      - example
  /products:
    get:
      parameters:
      - description: limit
        format: limit
        in: query
        name: limit
        type: integer
      - description: skip
        format: skip
        in: query
        name: skip
        type: integer
      - description: search
        format: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
      summary: Get All Products
      tags:
      - products
    post:
      description: Create An Product.
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreateProductForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
      summary: Create An Product
      tags:
      - products
  /products/{id}:
    delete:
      description: Delete An Product.
      parameters:
      - description: id
        format: id
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
      summary: Delete An Product
      tags:
      - products
    get:
      description: Returns the the product with ID.
      parameters:
      - description: id
        format: id
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
      summary: Find a product
      tags:
      - products
    put:
      description: Update An Product.
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreateProductForm'
      - description: id
        format: id
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
      summary: Update An Product
      tags:
      - products
  /users:
    get:
      parameters:
      - description: limit
        format: limit
        in: query
        name: limit
        type: integer
      - description: skip
        format: skip
        in: query
        name: skip
        type: integer
      - description: search
        format: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      summary: List Of users
      tags:
      - users
    post:
      description: Create An User.
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreateUserForm'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
      summary: Create An User
      tags:
      - users
  /users/{id}:
    delete:
      description: Delete An User.
      parameters:
      - description: id
        format: id
        in: path
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Delete An User
      tags:
      - users
    get:
      parameters:
      - description: id
        format: id
        in: path
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Get An User
      tags:
      - users
    put:
      description: Update An User.
      parameters:
      - description: id
        format: id
        in: path
        name: id
        type: integer
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreateUserForm'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
      summary: Update An User
      tags:
      - users
swagger: "2.0"
